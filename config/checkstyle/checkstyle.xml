<? xml version = " 1.0 " ?>
<! Module DOCTYPE  PUBLIC
          "- // Puppy Crawl // Configuration du contrôle DTD 1.3 // EN"
          "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<! - Configuration de Checkstyle vérifiant les conventions de codage LeanStacks depuis
  le style Java qui peut être trouvé à https://google.github.io/styleguide/javaguide.html.
  Checkstyle est très configurable. Assurez-vous de lire la documentation sur http://checkstyle.sf.net
  (ou dans votre distribution téléchargée). Pour désactiver complètement une vérification, il suffit de commenter
  ou supprimez-le du fichier. ->

< module  name = " Checker " >
  < property  name = " charset "  value = " UTF-8 " />

  < nom de la propriété  = " gravité " valeur = " avertissement " />

  < property  name = " fileExtensions "  value = " java, propriétés, xml " />
  <! - Vérifie les espaces - -
  <! - Voir http://checkstyle.sf.net/config_whitespace.html ->
  < nom du module  = " FileTabCharacter " >
    < property  name = " eachLine "  value = " true " />
  </ module >

  < nom du module  = " TreeWalker " >
    < module  name = " OuterTypeFilename " />
    < nom du module  = " IllegalTokenText " >
      < property  name = " tokens "  value = " STRING_LITERAL, CHAR_LITERAL " />
      < nom de la propriété  = " format "
        value = " \\ u00 (08 | 09 | 0 (a | A) | 0 (c | C) | 0 (d | D) | 22 | 27 | 5 (C | c)) | \\ (0 (10 | 11 | 12 | 14 | 15 | 42 | 47) | 134) " />
      < nom de la propriété  = " message "
        value = " Évitez d'utiliser l'échappement octal ou Unicode correspondant. " />
    </ module >
    < module  name = " AvoidEscapedUnicodeCharacters " >
      < property  name = " allowEscapesForControlCharacters "  value = " true " />
      < property  name = " allowByTailComment "  value = " true " />
      < property  name = " allowNonPrintableEscapes "  value = " true " />
    </ module >
    < nom du module  = " Longueur de ligne " >
      < nom de la propriété  = " max " value = " 120 " />
      < nom de la propriété  = " ignorePattern "
        value = " ^ package. * | ^ import. * | a href | href | http: // | https: // | ftp: // " />
    </ module >
    < module  name = " AvoidStarImport " />
    < nom du module  = " OneTopLevelClass " />
    < nom du module  = " NoLineWrap " />
    < nom du module  = " EmptyBlock " >
      < nom de la propriété  = " option " value = " TEXT " />
      < nom de la propriété  = " jetons "
        value = " LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH " />
    </ module >
    < module  name = " NeedBraces " />
    < nom du module  = " LeftCurly " >
      < nom de la propriété  = " maxLineLength " value = " 120 " />
    </ module >
    < module  name = " RightCurly " />
    < nom du module  = " RightCurly " >
      < nom de la propriété  = " option " value = " seul " />
      < nom de la propriété  = " jetons "
        valeur = " CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO, STATIC_INIT, INSTANCE_INIT " />
    </ module >
    < nom du module  = " WhitespaceAround " >
      < property  name = " allowEmptyConstructors "  value = " true " />
      < property  name = " allowEmptyMethods "  value = " true " />
      < property  name = " allowEmptyTypes "  value = " true " />
      < property  name = " allowEmptyLoops "  value = " true " />
      < message  key = " ws.notFollowed "
        value = " WhitespaceAround: '' {0}" n'est pas suivi d'espaces. Les blocs vides ne peuvent être représentés que par '{}' s'ils ne font pas partie d'une instruction multi-blocs (4.1.3) " />
      < message  key = " ws.notPreceded "
        value = " WhitespaceAround: '' {0}" n'est pas précédé d'un espace. " />
    </ module >
    < nom du module  = " OneStatementPerLine " />
    < module  name = " MultipleVariableDeclarations " />
    < nom du module  = " ArrayTypeStyle " />
    < module  name = " MissingSwitchDefault " />
    < module  name = " FallThrough " />
    < nom du module  = " UpperEll " />
    < nom du module  = " ModificateurOrdre " />
    < nom du module  = " EmptyLineSeparator " >
      < property  name = " allowNoEmptyLineBetweenFields "  value = " true " />
    </ module >
    < module  name = " SeparatorWrap " >
      < property  name = " tokens "  value = " DOT " />
      < nom de la propriété  = " option " value = " nl " />
    </ module >
    < module  name = " SeparatorWrap " >
      < property  name = " tokens "  value = " COMMA " />
      < nom de la propriété  = " option " value = " EOL " />
    </ module >
    < nom du module  = " Nom du paquet " >
      < nom de la propriété  = " format " valeur = " ^ [az] + (\. [az] [a-z0-9] *) * $ " />
      < message  key = " name.invalidPattern "  value = " Le nom du package" "{0}" doit correspondre au modèle "" {1} ". " />
    </ module >
    < nom du module  = " TypeName " >
      < message  key = " name.invalidPattern "  value = " Le nom du type '' {0} '' doit correspondre au modèle '' {1} ''. " />
    </ module >
    < nom du module  = " Nom du membre " >
      < nom de la propriété  = " format " valeur = " ^ [az] [a-z0-9] [a-zA-Z0-9] * $ " />
      < message  key = " name.invalidPattern "  value = "Le nom du membre '' {0} '' doit correspondre au modèle '' {1} ''. " />
    </ module >
    < nom du module  = " Nom du paramètre " >
      < nom de la propriété  = " format " valeur = " ^ [az] [a-z0-9] [a-zA-Z0-9] * $ " />
      < message  key = " name.invalidPattern "  value = "Le nom du paramètre '' {0} '' doit correspondre au motif '' {1} ''. " />
    </ module >
    < nom du module  = " CatchParameterName " >
      < nom de la propriété  = " format " valeur = " ^ [az] [a-z0-9] [a-zA-Z0-9] * $ " />
      < message  key = " name.invalidPattern "
        value = "Le nom du paramètre de capture '' {0} '' doit correspondre au modèle '' {1} ''. " />
    </ module >
    < module  name = " LocalVariableName " >
      < property  name = " tokens "  value = " VARIABLE_DEF " />
      < nom de la propriété  = " format " valeur = " ^ [az] [a-z0-9] [a-zA-Z0-9] * $ " />
      < property  name = " allowOneCharVarInForLoop "  value = " true " />
      < message  key = " name.invalidPattern "
        value = " Le nom de la variable locale '' {0} '' doit correspondre au modèle '' {1} ''. " />
    </ module >
    < nom du module  = " ClassTypeParameterName " >
      < nom de la propriété  = " format " valeur = " (^ [AZ] [0-9]?) $ | ([AZ] [a-zA-Z0-9] * [T] $) " />
      < message  key = " name.invalidPattern "  value = "Le nom du type de classe '' {0} '' doit correspondre au modèle '' {1} ''. " />
    </ module >
    < nom du module  = " MethodTypeParameterName " >
      < nom de la propriété  = " format " valeur = " (^ [AZ] [0-9]?) $ | ([AZ] [a-zA-Z0-9] * [T] $) " />
      < message  key = " name.invalidPattern "
        valeur = "Le nom du type de méthode '' {0} '' doit correspondre au modèle '' {1} ''. " />
    </ module >
    < nom du module  = " InterfaceTypeParameterName " >
      < nom de la propriété  = " format " valeur = " (^ [AZ] [0-9]?) $ | ([AZ] [a-zA-Z0-9] * [T] $) " />
      < message  key = " name.invalidPattern "
        value = "Le nom du type d'interface '' {0} '' doit correspondre au modèle '' {1} ''. " />
    </ module >
    < nom du module  = " NoFinalizer " />
    < nom du module  = " GenericWhitespace " >
      < message  key = " ws.followed "
        value = " GenericWhitespace '' {0} '' est suivi d'un espace. " />
      < message  key = " ws.preceded "
        value = " GenericWhitespace '' {0} '' est précédé d'un espace. " />
      < message  key = " ws.illegalFollow "
        value = " GenericWhitespace '' {0} '' doit être suivi d'un espace. " />
      < message  key = " ws.notPreceded "
        value = " GenericWhitespace '' {0} '' n'est pas précédé d'un espace. " />
    </ module >
    < nom du module  = " indentation " >
      < property  name = " basicOffset "  value = " 4 " />
      < property  name = " braceAdjustment "  value = " 0 " />
      < property  name = " caseIndent "  value = " 4 " />
      < property  name = " throwsIndent "  value = " 4 " />
      < property  name = " lineWrappingIndentation "  value = " 2 " />
      < property  name = " arrayInitIndent "  value = " 2 " />
    </ module >
    < nom du module  = " AbréviationAsWordInName " >
      < property  name = " ignoreFinal "  value = " false " />
      < property  name = " allowedAbbreviationLength "  value = " 1 " />
    </ module >
    < module  name = " OverloadMethodsDeclarationOrder " />
    < module  name = " VariableDeclarationUsageDistance " />
    < nom du module  = " CustomImportOrder " >
      < nom de la propriété  = " specialImportsRegExp " value = " org " />
      < nom de la propriété  = " thirdPartyPackageRegExp " value = " com " />
      < property  name = " sortImportsInGroupAlphabétiquement "  value = " true " />
      < property  name = " customImportOrderRules "
        value = " STATIC ### STANDARD_JAVA_PACKAGE ### SPECIAL_IMPORTS ### THIRD_PARTY_PACKAGE " />
    </ module >
    < nom du module  = " MethodParamPad " />
    < module  name = " OperatorWrap " >
      < nom de la propriété  = " option " value = " NL " />
      < nom de la propriété  = " jetons "
        value = " BAND, BOR, BSR, BXOR, DIV, EGAL, GE, GT, TERRE, LE, LITERAL_INSTANCEOF, LOR, LT, MOINS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR " />
    </ module >
    < nom du module  = " AnnotationLocation " >
      < nom de la propriété  = " jetons "
        valeur = " CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF " />
    </ module >
    < nom du module  = " AnnotationLocation " >
      < property  name = " tokens "  value = " VARIABLE_DEF " />
      < property  name = " allowSamelineMultipleAnnotations "  value = " true " />
    </ module >
    < module  name = " NonEmptyAtclauseDescription " />
    < nom du module  = " JavadocTagContinuationIndentation " />
    < module  name = " SummaryJavadoc " >
      < property  name = " allowediddenSummaryFragments "
        value = " ^ @ retourne le * | ^ Cette méthode retourne | ^ A [{] @code [a-zA-Z0-9] + [}] (est a) " />
    </ module >
    < nom du module  = " JavadocParagraph " />
    < module  name = " AtclauseOrder " >
      < property  name = " tagOrder "  value = " @param, @return, @throws, @deprecated " />
      < nom de la propriété  = " cible "
        valeur = " CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF " />
    </ module >
    < nom du module  = " JavadocMethod " >
      < nom de la propriété  = " portée " valeur = " public " />
      < property  name = " allowMissingParamTags "  value = " true " />
      < property  name = " allowMissingThrowsTags "  value = " true " />
      < property  name = " allowMissingReturnTag "  value = " true " />
      < property  name = " minLineCount "  value = " 2 " />
      < property  name = " allowedAnnotations "  value = " Substitution, Test " />
      < property  name = " allowThrowsTagsForSubclasses "  value = " true " />
    </ module >
    < nom du module  = " NomMéthode " >
      < nom de la propriété  = " format " valeur = " ^ [az] [a-z0-9] [a-zA-Z0-9 _] * $ " />
      < message  key = " name.invalidPattern "  value = "Le nom de la méthode '' {0} '' doit correspondre au modèle '' {1} ''. " />
    </ module >
    < nom du module  = " SingleLineJavadoc " >
      < nom de la propriété  = " ignoreInlineTags " value = " false " />
    </ module >
    < nom du module  = " EmptyCatchBlock " >
      < nom de la propriété  = " nomExceptionVariable " valeur = " attendu " />
    </ module >
    < module  name = " CommentsIndentation " />
  </ module >
</ module >